DROP TABLE IF EXISTS SAM_EMPLOYEE;
DROP TABLE IF EXISTS SAM_EMPLOYEE_DLT;
DROP TABLE IF EXISTS SAM_EMPLOYEE_MASTERDETAIL;
DROP TABLE IF EXISTS SAM_EXCEL_EMPLOYEE;
DROP TABLE IF EXISTS SAM_ACHIEVEMENT;
DROP TABLE IF EXISTS SAM_CODE;
DROP TABLE IF EXISTS SAM_SKILL;
DROP TABLE IF EXISTS SAM_JOBLEVEL;
DROP TABLE IF EXISTS SAM_DIVISION;
DROP TABLE IF EXISTS SAM_DEPARTMENT;
DROP TABLE IF EXISTS SAM_FILE_INFO;
DROP TABLE IF EXISTS SAM_MESSAGES;
DROP TABLE IF EXISTS SAM_USER;
DROP TABLE IF EXISTS TDO_IDGEN;
DROP TABLE IF EXISTS TDO_ACCOUNT;
DROP TABLE IF EXISTS SAM_USER;
DROP TABLE IF EXISTS DB_LOG;
DROP SEQUENCE IF EXISTS logSequence;
DROP SEQUENCE IF EXISTS idsequence;

DROP TABLE IF EXISTS MINI_USER;
DROP TABLE IF EXISTS MINI_ACNT;
DROP TABLE IF EXISTS MINI_ITEM;
DROP TABLE IF EXISTS MINI_ITEM_AMT;
DROP TABLE IF EXISTS MINI_TRANS;
DROP TABLE IF EXISTS MINI_BAL;
DROP TABLE IF EXISTS MINI_USER;
DROP TABLE IF EXISTS MINI_USER;


CREATE TABLE MINI_USER (
	CUST_NO VARCHAR(10) NOT NULL,
	CUST_NM VARCHAR(50) NOT NULL,
	BRTH_DY VARCHAR(8) NOT NULL,
	EMAIL_ID VARCHAR(100) NOT NULL,
	MOBILE_NO VARCHAR(11) NOT NULL
);
ALTER TABLE MINI_USER ADD CONSTRAINT PK_MINI_USER PRIMARY KEY (CUST_NO);
COMMENT ON TABLE MINI_USER IS '사용자';
COMMENT ON COLUMN MINI_USER.CUST_NO IS '사용자번호';
COMMENT ON COLUMN MINI_USER.CUST_NM IS '사용자명';
COMMENT ON COLUMN MINI_USER.BRTH_DY IS '생년월일';
COMMENT ON COLUMN MINI_USER.EMAIL_ID IS '이메일ID';
COMMENT ON COLUMN MINI_USER.MOBILE_NO IS '휴대폰번호';

CREATE TABLE MINI_ACNT (	
	ACNT_NO VARCHAR(11) NOT NULL,
	CUST_NO VARCHAR(10) NOT NULL,
	ACNT_NM VARCHAR(100) NOT NULL,
	OPEN_DY VARCHAR(8) NOT NULL,
	USE_YN VARCHAR(1) NOT NULL,
	CUR_DEPOSIT DECIMAL(19,2) NOT NULL,
	D1_DEPOSIT DECIMAL(19,2) NOT NULL,
	D2_DEPOSIT DECIMAL(19,2) NOT NULL
);
ALTER TABLE MINI_ACNT ADD CONSTRAINT PK_MINI_ACNT PRIMARY KEY (ACNT_NO);
COMMENT ON TABLE MINI_ACNT IS '계좌';
COMMENT ON COLUMN MINI_ACNT.ACNT_NO IS '계좌번호';
COMMENT ON COLUMN MINI_ACNT.CUST_NO IS '사용자번호';
COMMENT ON COLUMN MINI_ACNT.ACNT_NM IS '계좌명';
COMMENT ON COLUMN MINI_ACNT.OPEN_DY IS '개설일자';
COMMENT ON COLUMN MINI_ACNT.USE_YN IS '사용여부';
COMMENT ON COLUMN MINI_ACNT.CUR_DEPOSIT IS '현재예수금';
COMMENT ON COLUMN MINI_ACNT.D1_DEPOSIT IS 'D+1일예수금';
COMMENT ON COLUMN MINI_ACNT.D2_DEPOSIT IS 'D+2일예수금';

CREATE TABLE MINI_ITEM (
	ITEM_NO VARCHAR(6) NOT NULL,
	ITEM_NM VARCHAR(50) NOT NULL,
	ITEM_CLS VARCHAR(1) NOT NULL,
	WK52_HIGH_AMT DECIMAL(19,2) NOT NULL,
	WK52_ROW_AMT DECIMAL(19,2) NOT NULL,
	MRK_CAP DECIMAL(19,2) NOT NULL,
	PAR DECIMAL(19,2) NOT NULL,
	PER DECIMAL(19,2) NOT NULL,
	PBR DECIMAL(19,2) NOT NULL
);
ALTER TABLE MINI_ITEM ADD CONSTRAINT PK_MINI_ITEM PRIMARY KEY (ITEM_NO);
COMMENT ON TABLE MINI_ITEM IS '종목';
COMMENT ON COLUMN MINI_ITEM.ITEM_NO IS '종목번호';
COMMENT ON COLUMN MINI_ITEM.ITEM_NM IS '종목명';
COMMENT ON COLUMN MINI_ITEM.ITEM_CLS IS '종목구분';
COMMENT ON COLUMN MINI_ITEM.WK52_HIGH_AMT IS '52주최고가';
COMMENT ON COLUMN MINI_ITEM.WK52_ROW_AMT IS '52주최저가';
COMMENT ON COLUMN MINI_ITEM.MRK_CAP IS '시가총액';
COMMENT ON COLUMN MINI_ITEM.PAR IS '액면가';
COMMENT ON COLUMN MINI_ITEM.PER IS 'PER';
COMMENT ON COLUMN MINI_ITEM.PBR IS 'PBR';

CREATE TABLE MINI_ITEM_AMT (	
	ITEM_NO VARCHAR(6) NOT NULL,
	BASE_DY VARCHAR(8) NOT NULL,
	START_AMT DECIMAL(19,2) NOT NULL,
	CUR_AMT DECIMAL(19,2) NOT NULL,
	CLOSE_AMT DECIMAL(19,2) NOT NULL,
	HIGH_AMT DECIMAL(19,2) NOT NULL,
	ROW_AMT DECIMAL(19,2) NOT NULL,
	HIGH_VI_AMT DECIMAL(19,2) NOT NULL,
	ROW_VI_AMT DECIMAL(19,2) NOT NULL,
	HIGH_LMT_AMT DECIMAL(19,2) NOT NULL,
	ROW_LMT_AMT DECIMAL(19,2) NOT NULL
);
ALTER TABLE MINI_ITEM_AMT ADD CONSTRAINT PK_MINI_ITEM_AMT PRIMARY KEY (ITEM_NO, BASE_DY);
COMMENT ON TABLE MINI_ITEM_AMT IS '종목가격';
COMMENT ON COLUMN MINI_ITEM_AMT.ITEM_NO IS '종목번호';
COMMENT ON COLUMN MINI_ITEM_AMT.BASE_DY IS '기준일자';
COMMENT ON COLUMN MINI_ITEM_AMT.START_AMT IS '시작가';
COMMENT ON COLUMN MINI_ITEM_AMT.CUR_AMT IS '현재가';
COMMENT ON COLUMN MINI_ITEM_AMT.CLOSE_AMT IS '종가';
COMMENT ON COLUMN MINI_ITEM_AMT.HIGH_AMT IS '당일최고가';
COMMENT ON COLUMN MINI_ITEM_AMT.ROW_AMT IS '당일최저가';
COMMENT ON COLUMN MINI_ITEM_AMT.HIGH_VI_AMT IS '상VI가';
COMMENT ON COLUMN MINI_ITEM_AMT.ROW_VI_AMT IS '하VI가';
COMMENT ON COLUMN MINI_ITEM_AMT.HIGH_LMT_AMT IS '상한가';
COMMENT ON COLUMN MINI_ITEM_AMT.ROW_LMT_AMT IS '하한가';

/* 5. MINI_TRANS */
CREATE TABLE MINI_TRANS (	
	TRANS_NO VARCHAR(10) NOT NULL,
	BASE_DY VARCHAR(8) NOT NULL,
	CUST_NO VARCHAR(10) NOT NULL,
	ACNT_NO VARCHAR(11) NOT NULL,
	ITEM_NO VARCHAR(6) NOT NULL,
	BUY_CNT INTEGER NOT NULL,
	BUY_AMT DECIMAL(19,2) NOT NULL,
	BUY_FEE DECIMAL(19,2) NOT NULL,
	SELL_CNT INTEGER NOT NULL,
	SELL_AMT DECIMAL(19,2) NOT NULL,
	SELL_FEE DECIMAL(19,2) NOT NULL,
	TAX DECIMAL(19,2) NOT NULL
);
ALTER TABLE MINI_TRANS ADD CONSTRAINT PK_MINI_TRANS PRIMARY KEY (TRANS_NO, BASE_DY, CUST_NO);
COMMENT ON TABLE MINI_TRANS IS '거래내역';
COMMENT ON COLUMN MINI_TRANS.TRANS_NO IS '거래번호';
COMMENT ON COLUMN MINI_TRANS.BASE_DY IS '기준일자';
COMMENT ON COLUMN MINI_TRANS.CUST_NO IS '사용자번호';
COMMENT ON COLUMN MINI_TRANS.ACNT_NO IS '계좌번호';
COMMENT ON COLUMN MINI_TRANS.ITEM_NO IS '종목번호';
COMMENT ON COLUMN MINI_TRANS.BUY_CNT IS '매수수량';
COMMENT ON COLUMN MINI_TRANS.BUY_AMT IS '매수금액';
COMMENT ON COLUMN MINI_TRANS.BUY_FEE IS '매수수수료';
COMMENT ON COLUMN MINI_TRANS.SELL_CNT IS '매도수량';
COMMENT ON COLUMN MINI_TRANS.SELL_AMT IS '매도금액';
COMMENT ON COLUMN MINI_TRANS.SELL_FEE IS '매도수수료';
COMMENT ON COLUMN MINI_TRANS.TAX IS '세금';

/* MINI_BAL */
CREATE TABLE MINI_BAL (	
	ACNT_NO VARCHAR(11) NOT NULL,
	BASE_DY VARCHAR(8) NOT NULL,
	ITEM_NO VARCHAR(6) NOT NULL,
	EVAL_PRFT_AMT DECIMAL(19,2) NOT NULL,
	KEEP_CNT INTEGER NOT NULL,
	BUY_AMT DECIMAL(19,2) NOT NULL,
	PRF_RT DECIMAL(19,2) NOT NULL,
	EVAL_AMT DECIMAL(19,2) NOT NULL,
	BAL_RT DECIMAL(19,2) NOT NULL,
	EXPT_SELL_FEE DECIMAL(19,2) NOT NULL,
	EXPT_TAX DECIMAL(19,2) NOT NULL
);
ALTER TABLE MINI_BAL ADD CONSTRAINT PK_MINI_BAL PRIMARY KEY (ACNT_NO, BASE_DY, ITEM_NO);
COMMENT ON TABLE MINI_BAL IS '주식잔고';
COMMENT ON COLUMN MINI_BAL.ACNT_NO IS '계좌번호';
COMMENT ON COLUMN MINI_BAL.BASE_DY IS '기준일자';
COMMENT ON COLUMN MINI_BAL.ITEM_NO IS '종목번호';
COMMENT ON COLUMN MINI_BAL.EVAL_PRFT_AMT IS '평가손익';
COMMENT ON COLUMN MINI_BAL.KEEP_CNT IS '보유수량';
COMMENT ON COLUMN MINI_BAL.BAL_RT IS '비중';
COMMENT ON COLUMN MINI_BAL.PRF_RT IS '수익률';
COMMENT ON COLUMN MINI_BAL.EVAL_AMT IS '평가금액';
COMMENT ON COLUMN MINI_BAL.BUY_AMT IS '매수금액';
COMMENT ON COLUMN MINI_BAL.EXPT_SELL_FEE IS '예상매도수수료';
COMMENT ON COLUMN MINI_BAL.EXPT_TAX IS '예상세금';


CREATE TABLE SAM_EMPLOYEE(
		NUM VARCHAR(20) NOT NULL,
		NAME VARCHAR(20),
		BIRTHDATE VARCHAR(20),
		SSN VARCHAR(20),
		SEX VARCHAR(20),
		TELEPHONE VARCHAR(20),
		ADDRESS VARCHAR(80),
		POSTAL VARCHAR(20),
		JOBLEVEL_CODE VARCHAR(20),
		DIVISION_CODE VARCHAR(20),
		DEPARTMENT_CODE VARCHAR(20),
		SKILL_CODE VARCHAR(20),
		CONSTRAINT SAM_EMPLOYEE_PK PRIMARY KEY(NUM)

);


CREATE TABLE SAM_EMPLOYEE_DLT(
		NUM VARCHAR(20) NOT NULL,
		NAME VARCHAR(20),
		BIRTHDATE VARCHAR(20),
		SSN VARCHAR(20),
		SEX VARCHAR(20),
		TELEPHONE VARCHAR(20),
		ADDRESS VARCHAR(80),
		POSTAL VARCHAR(20),
		JOBLEVEL_CODE VARCHAR(20),
		DIVISION_CODE VARCHAR(20),
		DEPARTMENT_CODE VARCHAR(20),
		SKILL_CODE VARCHAR(20),
		CONSTRAINT SAM_EMPLOYEE_DLT_PK PRIMARY KEY(NUM)
);

CREATE TABLE SAM_EMPLOYEE_MASTERDETAIL(
		NUM VARCHAR(20) NOT NULL,
		NOWJOB VARCHAR(30),
		TITLE VARCHAR(20),
		RETIREMENT VARCHAR(20),
		WORKINGYEAR VARCHAR(80),
		FIRSTDATE VARCHAR(20),
		WORKINGDATE VARCHAR(20),
		MARRIAGE VARCHAR(20),
		ARMY VARCHAR(20),
		CONSTRAINT SAM_EMPLOYEE_MASTERDETAIL_PK PRIMARY KEY(NUM)
);

CREATE TABLE SAM_EXCEL_EMPLOYEE(
		NUM VARCHAR(20) NOT NULL,
		NAME VARCHAR(20),
		BIRTHDATE VARCHAR(20),
		TELEPHONE VARCHAR(20),
		JOBLEVEL_CODE VARCHAR(20),
		SKILL_CODE VARCHAR(20),
		CONSTRAINT SAM_EXCEL_EMPLOYEE_PK PRIMARY KEY(NUM)
);

CREATE TABLE SAM_ACHIEVEMENT(
		NUM VARCHAR(20) NOT NULL,
		YYYY VARCHAR(20) NOT NULL,
		VALUE  VARCHAR(100),
		ETC VARCHAR(100),
		MM VARCHAR(20) NOT NULL
);		

CREATE TABLE SAM_CODE(
		CODE_GROUP VARCHAR(20) NOT NULL,
		CODE VARCHAR(20) NOT NULL,
		NAME VARCHAR(20),
		CODE_DESC VARCHAR(100),
		CONSTRAINT SAM_CODE_PK PRIMARY KEY(CODE_GROUP, CODE)
);

CREATE TABLE SAM_SKILL(
		CODE VARCHAR(20) NOT NULL,
		NAME VARCHAR(20)
);

CREATE TABLE SAM_JOBLEVEL(
		CODE VARCHAR(20) NOT NULL,
		NAME VARCHAR(20)
);

CREATE TABLE SAM_DIVISION(
		CODE VARCHAR(20) NOT NULL,
		NAME VARCHAR(40)
);

CREATE TABLE SAM_DEPARTMENT(
		DIV_CODE VARCHAR(20) NOT NULL,
		CODE VARCHAR(20) NOT NULL,
		NAME VARCHAR(40)
);

CREATE TABLE SAM_FILE_INFO(
		FILE_NAME VARCHAR(50) NOT NULL,
		UPLOAD_FILE_PATH VARCHAR(500) NOT NULL,
		UPLOAD_FILE_NAME VARCHAR(100),
		FILE_SIZE BIGINT,
		UPLOAD_DATE VARCHAR(20),
		CONSTRAINT SAM_FILE_INFO_PK PRIMARY KEY(FILE_NAME, UPLOAD_FILE_PATH)
);

CREATE TABLE SAM_MESSAGES(
		CODE VARCHAR(100) NOT NULL,
		LOCALE VARCHAR(20) NOT NULL,
		MESSAGE VARCHAR(100),
		ATTRIBUTE VARCHAR(2),
		PRIMARY KEY(CODE, LOCALE)
);

CREATE TABLE SAM_USER(
		USR_ID VARCHAR(30) NOT NULL PRIMARY KEY,
		USR_NM VARCHAR(100) NOT NULL,
		USR_PW VARCHAR(512) NOT NULL,
		LANG_CLCD VARCHAR(4) DEFAULT 'ko',
		ROLE VARCHAR(30) DEFAULT 'developer',
		REG_DT VARCHAR(14) DEFAULT ' ',
		CHNG_USR_ID VARCHAR(30) DEFAULT ' ',
		CHNG_DT VARCHAR(14) DEFAULT ' '
);

CREATE TABLE TDO_IDGEN (
    ID_KEY        VARCHAR(20) PRIMARY KEY,
    ID_SEQ        DECIMAL(30)    
);

CREATE TABLE TDO_ACCOUNT (
    NAME        VARCHAR(20),
    ID          VARCHAR(20)   
);

CREATE SEQUENCE idsequence START WITH 1 INCREMENT BY 1;

CREATE TABLE dual (
    dummy        VARCHAR(1) PRIMARY KEY
);




         
CREATE TABLE DB_LOG(  
   EVENT_ID VARCHAR(100),
   TIMESTMP TIMESTAMP,
   THREAD_NAME VARCHAR(100),
   FORMATTED_MESSAGE VARCHAR(4000),
   LOGGER_NAME VARCHAR(100),
   LEVEL_STRING VARCHAR(10),
   CALLER_FILENAME VARCHAR(100),
   CALLER_CLASS VARCHAR(100),
   CALLER_METHOD VARCHAR(100),
   CALLER_LINE VARCHAR(10),
   EXCEPTION VARCHAR(1000)
);

CREATE SEQUENCE logSequence START WITH 1 INCREMENT BY 1;